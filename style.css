*, *::before, *::after { /* Universal Selector selects all HTML elements. Commonly used for global styling resets.*/
	margin: 0; /* put this here to remove default margin 10px */
	padding: 0; /* put this here to remove default padding 0px */
	box-sizing: border-box; /* this will make container specifically follow the width / height set for container */
}
:root {
	--width-desktop: 600px;
	--width-mobile: 480px;
	--height-min: 600px;
	--main-color: hotpink; /*this is declaring a global variable*/
	--padd-box: 10px;
	--side-margin: 10px;
	--border-design-a: 15px 15px 0px 0px;
	--timing-bounce: cubic-bezier(0,0,0.5,1.5);
}
html {
	background-color: grey;
	font-family: calibri;
	font-size: 1.5rem;
	/*padding: var(--padd-box);*/
	width: 100%;
}
body {
	max-width: var(--width-desktop);
	min-width: var(--width-mobile);
	min-height: var(--height-min);
	background-color: lightgray;
}


/* ---------------------------------------- Item Box with Hover ---------------------------------------- */
	.itembox {
		background-color: #FFFFFF;
		width: 100% - var(--side-margin)*2;
		height: 2em;
		border-style: none;
		border-radius: var(--border-design-a);
		margin: 0 var(--side-margin);
		transition: transform 0.1s;
		transition-timing-function: ease-in-out;
	}
	.itembox:hover {
		transform: translateY(-15px);
	}

	:hover {}
	.container {
		/*display: inline-block;*/
		border: 1px solid black;
	}
	.boxmodel {
		display: inline-block;
		width: 150px; height: 100px;
		margin: 0px 0px;
		background: red;
	}
	.link {
		color: orange;
	}
	.containerZirul {
		margin: auto;
		background-color: blue;
		width: 500px;
		height: 300px;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	.boxA {
		background-color: red;
		width: 400px;
		height: 200px;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	.boxB {
		background-color: yellow;
		width: 300px;
		height: 100px;
	}


	.container-link {
		position: relative;
		background-color: brown;
		width: 200px;
		height: 50px;
		overflow: hidden;

	}
	.link-pop {
		position: absolute;
		background-color: blue;
		width: 200px;
		height: 50px;
		line-height: 50px;
		top: 50px;
		transition: transform 0.1s;
		text-align: center;
	}
	.container-link:hover .link-pop {
		transform: translateY(-50px);
	}

/* ---------------------------------------- MOBILE Responsive ---------------------------------------- */
	@media screen and (min-width: var(--width-mobile)) {
		html {
			
		}
	}


/* ---------------------------------------- CSS Animation ---------------------------------------- */
	/* simplifying css property with variable|class, maybe this is used together with javascript */
	.ease-in {animation-timing-function: ease-in;}
	.ease-out {animation-timing-function: ease-out;}
	
	@keyframes anim1 { /*decaring keyframes with from and to*/
		from {}
		to {/* css syntax | css properties */}
		from {font-size: 10px;}
		to {font-size: 30px;}

	}
	@keyframes anim2 { /*declaring keyframes with percentage of duration*/
		0% {background-color: gray;}
		100% {background-color: lightgray;}
		0% {left: 0;}
		100% {left: calc(100% - 100px);} /*this is intended for mobile responsive most likely*/
	}
	/* Play Animation on hover */
		@keyframes bloop {
			50% { /* 50% is used for looping animation */
				color: black;
				transform: translateY(10px);
				transform: translateX(50px);
			}
		}
		.bloophover {
			width: 400px; height: 100px;
			background-color: white;
			vertical-align: 0px;
			animation: bloop 1s ease-in infinite;
		}


/* ---------------------------------------- SVG Test ---------------------------------------- */
	.svgtest {
		margin: var(--side-margin);
		background-color: white;
		background-image: url("images/circle-heat-svgrepo-com.svg");
		background-position: center;
		background-repeat: no-repeat;
		background-size: 100%; /* (cover[resize background image to COVER entire container] | auto | percentage | px) */
		--width-svg: 250px;
		width: var(--width-svg); /*not necessary to set width because by default it will fill entire container swidth*/
		height: calc(var(--width-svg) * 0.5); /*cannot use auto*/
	}


/* ---------------------------------------- Title ---------------------------------------- */